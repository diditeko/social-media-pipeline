
services:
  # ====================
  # 1. PostgreSQL (Airflow Metadata)
  # ====================
  postgres:
    image: postgres:15
    container_name: airflow_postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_metadata:/var/lib/postgresql/data

  # ====================
  # 2. PostgreSQL (Data Storage)
  # ====================
  tweets_postgres:
    image: postgres:15
    container_name: tweets_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: violet
      POSTGRES_DB: tweetspark
    ports:
      - "5433:5432"
    volumes:
      - tweets_data:/var/lib/postgresql/data

  # ====================
  # 3. Kafka (KRaft mode, no ZooKeeper)
  # ====================
  kafka:
    image: confluentinc/cp-kafka:7.5.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      KAFKA_CLUSTER_ID: XjAVT9Z2TJCIy6Hj4wK0xA

  # ====================
  # 4. Hadoop (HDFS)
  # ====================
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    environment:
      - CLUSTER_NAME=test
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - hadoop_namenode:/hadoop/dfs/name

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    ports:
      - "9864:9864"
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    depends_on:
      - namenode

  # ====================
  # 5. Spark (Processing)
  # ====================
  spark:
    image: bitnami/spark:3.5
    container_name: spark
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8081:8081"
    volumes:
      - .:/app
    depends_on:
      - namenode

  # ====================
  # 6. Airflow Webserver
  # ====================
  webserver:
    build : .
    container_name: airflow_webserver
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "d8CpFRer2MBMkHArLKaw1t-J7RnI9rA1QaVdAZMWT1E="
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "false"
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    volumes:
      - ./airflow_dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - .:/app
      - ./crawler-service:/app/crawler-service
    ports:
      - "8080:8080"
    command: webserver

  # ====================
  # 7. Airflow Scheduler
  # ====================
  scheduler:
    build : .
    container_name: airflow_scheduler
    depends_on:
      - webserver
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    volumes:
      - ./airflow_dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - .:/app
      - ./crawler-service:/app/crawler-service
    command: scheduler

volumes:
  postgres_metadata:
  tweets_data:
  hadoop_namenode:
  hadoop_datanode:
